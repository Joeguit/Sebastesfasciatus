function [prdData, info] = predict_Sebastes_fasciatus_individual(par, data, auxData)
% file generated by prt_predict
 global n_ind


% unpack par, data, auxData
cPar = parscomp_st(par); vars_pull(par);
v2struct(par); v2struct(cPar); v2struct(data); v2struct(auxData);


% compute temperature correction factors
pars_T = T_A;
% TC_10 = tempcorr(temp.tL10, T_ref, pars_T);
% TC_7 = tempcorr(temp.tL7, T_ref, pars_T);
% TC_5 = tempcorr(temp.tL5, T_ref, pars_T);
TC_2 = tempcorr(temp.tL2, T_ref, pars_T);

% customized filter
filterChecks = z1 < 0 || z2< 0 || z3 <0 || z4 <0 || z5 <0 || z6 < 0 || z7<0 || z8<0 || z9<0 || z10<0;

if filterChecks
    info = 0; prdData = []; return;
else
    info = 1;
end


% uni-varate data

%%% 2.5 deg C
kT_M = k_M * TC_2; time = tL2(:,1);  

allz = zeros(n_ind,1); allg = allz; allome = allz; allLm = allz;
pars = [p_M; kap;v; y_E_V; E_G; w_E; w_V; k_M; z];

for i = 1:n_ind
    allz(i) = eval(['z',num2str(i)]);
    pars(end) = eval(['z',num2str(i)]);
    [p_Am_ind, E_m_ind, g_ind, m_Em_ind, ome_ind,  L_mind] = get_pars(pars);
    allg(i) = g_ind; allome(i) = ome_ind; allLm(i) = L_mind;
end
% 
% z_ind = z;
% [p_Am_ind, E_m_ind, g_ind, m_Em_ind, ome_ind,  L_mind] = get_pars(pars);
%  rho_B = 1 / 3/ (1 + f/ g_ind); % -, scaled von Bert growth rate for individual
 
  rho_B = 1 ./ 3./ (1 + f./ allg); % -, scaled von Bert growth rate for individual
 rT_B = kT_M .* rho_B; % d, von Bert growth rate at T for individual
% pars_tp_ind = [g_ind, k, l_T, v_Hb, v_Hp ];
L_i = f * allLm;  
L_0 = Lw0.tL2 * del_M; % cm, initial structural length 
L = L_i' - (L_i' - L_0) .* exp( - rT_B' .* time); % cm, expected length at time
ELw1 = L/ del_M; % cm, physical length
EW1 = L.^3 .* (1 + allome' .* f); % g,  wet weight
% pack output
prdData.tL2(:,:) = ELw1; 
prdData.tW2(:,:) = EW1;    

% %%% 5 deg C
 %kT_M = k_M * TC_5; time = tL5(:,1);   
% z_ind = z1;
% pars = [p_M; kap;v; y_E_V; E_G; w_E; w_V; k_M; z_ind];
% [p_Am_ind, E_m_ind, g_ind, m_Em_ind, ome_ind,  L_mind] = get_pars(pars);
% pars_tp_ind = [g_ind, k, l_T, v_Hb, v_Hp ];
% tvel = get_tp(pars_tp_ind, f, [tau_b, f*z/z_ind, l_b*z/z_ind], time * kT_M);
% L  = L_mind * tvel(:,4);   % cm, structural length 
% ELw1 = L/ del_M; % cm, physical length 
% EW1 = L.^3 * (1 + ome_ind * f); % g,  wet weight
% % pack output
% prdData.tL5(:,:) = repmat(ELw1,1,n_ind);  
% prdData.tW5(:,:) = repmat(EW1,1,n_ind); 
% 
% %%% 7 deg C
% kT_M = k_M * TC_7; time = tL7(:,1); 
% z_ind = z1;
% pars = [p_M; kap;v; y_E_V; E_G; w_E; w_V; k_M; z_ind];
% [p_Am_ind, E_m_ind, g_ind, m_Em_ind, ome_ind,  L_mind] = get_pars(pars);
% pars_tp_ind = [g_ind, k, l_T, v_Hb, v_Hp ];
% tvel = get_tp(pars_tp_ind, f, [tau_b, f*z/z_ind, l_b*z/z_ind], time * kT_M);
% L  = L_mind * tvel(:,4);   % cm, structural length 
% ELw1 = L/ del_M; % cm, physical length
% EW1 = L.^3 * (1 + ome_ind * f); % g,  wet weight
% % pack output
% prdData.tL7(:,:) = repmat(ELw1,1,n_ind); 
% prdData.tW7(:,:) = repmat(EW1,1,n_ind); 
% 
% %%% 10 deg C
% kT_M = k_M * TC_10; time = tL10(:,1); 
% z_ind = z1;
% pars = [p_M; kap;v; y_E_V; E_G; w_E; w_V; k_M; z_ind];
% [p_Am_ind, E_m_ind, g_ind, m_Em_ind, ome_ind,  L_mind] = get_pars(pars);
% pars_tp_ind = [g_ind, k, l_T, v_Hb, v_Hp ];
% tvel = get_tp(pars_tp_ind, f, [tau_b, f*z/z_ind, l_b*z/z_ind], time * kT_M);
% L  = L_mind * tvel(:,4);   % cm, structural length 
% ELw1 = L/ del_M; % cm, physical length
% EW1 = L.^3 * (1 + ome_ind * f); % g,  wet weight
% % pack output
% prdData.tL10(:,:) = repmat(ELw1,1,n_ind); 
% prdData.tW10(:,:) = repmat(EW1,1,n_ind);  

end


function [p_Am_ind, E_m_ind, g_ind, m_Em_ind, ome_ind,  L_mind] = get_pars(p)

p_M = p(1); kap= p(2);v = p(3); y_E_V= p(4); E_G= p(5);w_E= p(6);w_V= p(7);k_M = p(8);z_ind = p(9);

  p_Am_ind = z_ind * p_M/ kap;             % J/d.cm^2, {p_Am} spec assimilation flux
  E_m_ind = p_Am_ind/ v;                   % J/cm^3, reserve capacity [E_m]
  g_ind = E_G/ (kap* E_m_ind);             % -, energy investment ratio
  m_Em_ind = y_E_V * E_m_ind/ E_G;         % mol/mol, reserve capacity 
  ome_ind = m_Em_ind * w_E/ w_V;           % -, contribution of reserve to weight
  L_mind = v/ k_M/ g_ind;                  % cm, max struct length

end
